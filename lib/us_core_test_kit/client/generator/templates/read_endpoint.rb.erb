# frozen_string_literal: true

require_relative '../../server_proxy'
require_relative 'tags'

module USCoreTestKit
  module Client
    module <%= module_name %>
      class ReadEndpoint < Inferno::DSL::SuiteEndpoint
        include ServerProxy

        def test_run_identifier
          request.get_header('HTTP_AUTHORIZATION')&.split&.last
        end

        def make_response
          server_response = proxy_request
          response.status = server_response.status
          response.body = server_response.body
        end

        def proxy_request
          proxy_client.get("#{resource_type}/#{resource_id}", request_params)
        end

        def tags
          [READ_REQUEST_TAG, resource_to_tag(resource_type)]
        end

        def resource_to_tag(resource)
          case resource
            <%- resources.each do |resource| -%>
            when '<%= resource %>'
              READ_<%= resource.underscore.upcase %>_TAG
            <%- end -%>
          end
        end

        def resource_id
          request.params[:resource_id]
        end

        def resource_type
          request.params[:resource_type]
        end

        def request_params
          request.params.to_h.except(:resource_id, :resource_type).stringify_keys
        end
      end
    end
  end
end
