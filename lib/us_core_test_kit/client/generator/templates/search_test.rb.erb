# frozen_string_literal: true

module USCoreTestKit
  module Client
    module <%= module_name %>
      class <%= class_name %> < Inferno::Test
        include TestHelper

        id :<%= test_id %>
        title '<%= title %>'
        description %(
          <%= description %>
        )
        optional <%= optional? %>

        input :<%= resource_type.underscore.downcase %>_support,
              optional: true

        def required_params
          <%= search_metadata[:names] %>
        end

        def parent_optional?
          Inferno::Repositories::Tests.new.find(id)&.parent&.optional?
        end

        def skip_message
          "Inferno did not receive any requests for the `<%= resource_type %>` resource type, so support for <%= group_metadata.profile_name %> is not expected."
        end

        def failure_message
          "No searches made for the `<%= resource_type %>` resource type with required search parameters: `#{required_params.join(' + ')}`."
        end

        run do
          if parent_optional?
            omit_if <%= resource_type.underscore.downcase %>_support.blank?, skip_message
          else
            skip_if <%= resource_type.underscore.downcase %>_support.blank?, skip_message
          end
          
          requests = load_tagged_requests(SEARCH_<%= resource.underscore.upcase %>_TAG)
          requests_with_params = filter_requests_by_search_parameters(requests, required_params)
          assert requests_with_params.any?, failure_message
        end
      end
    end
  end
end
