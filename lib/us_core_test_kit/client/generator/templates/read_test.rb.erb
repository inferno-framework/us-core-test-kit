# frozen_string_literal: true

module USCoreTestKit
  module Client
    module <%= module_name %>
      class <%= class_name %> < Inferno::Test
        include TestHelper

        id :<%= test_id %>

        <%- if test_id == 'us_core_v610_practitioner_client_read_test' &&  module_name == 'USCoreClientV610' -%>
        verifies_requirements 'hl7.fhir.us.core_6.1.0@314'
        <%- elsif test_id == 'us_core_v610_practitioner_role_client_read_test' &&  module_name == 'USCoreClientV610' -%>
        verifies_requirements 'hl7.fhir.us.core_6.1.0@315'
        <%- elsif test_id == 'us_core_v610_related_person_client_read_test' &&  module_name == 'USCoreClientV610' -%>
        verifies_requirements 'hl7.fhir.us.core_6.1.0@316'
        <%- end -%>
        <%- if test_id == 'us_core_v700_practitioner_client_read_test' &&  module_name == 'USCoreClientV700' -%>
        verifies_requirements 'hl7.fhir.us.core_7.0.0@314'
        <%- elsif test_id == 'us_core_v700_practitioner_role_client_read_test' &&  module_name == 'USCoreClientV700' -%>
        verifies_requirements 'hl7.fhir.us.core_7.0.0@315'
        <%- elsif test_id == 'us_core_v700_related_person_client_read_test' &&  module_name == 'USCoreClientV700' -%>
        verifies_requirements 'hl7.fhir.us.core_7.0.0@316'
        <%- end -%>
        title '<%= title %>'
        description %(
          <%= description %>
        )

        def skip_message
          "Inferno did not receive any read requests for the `<%= resource_type %>` resource type."
        end

        def failure_message
          "Inferno did not receive the expected read request for the target instance of the <%= group_metadata.profile_name %>: `<%= resource_type %>/<%= expected_resource_id %>`."
        end

        run do
          requests = load_tagged_requests(READ_<%= resource.underscore.upcase %>_TAG)
          skip_if requests.blank?, skip_message

          requests_for_id = filter_requests_by_resource_id(requests, '<%= expected_resource_id %>')
          assert requests_for_id.any?, failure_message
        end
      end
    end
  end
end
