require 'inferno/dsl/oauth_credentials'
require_relative '../../version'
require_relative '<%= capability_statement_file_name %>'
require_relative '<%= clinical_notes_guidance_file_name %>'
require_relative '../../custom_groups/data_absent_reason_group'
require_relative '../../custom_groups/smart_app_launch_group'<% if us_core_6_and_above? %>
require_relative '<%= granular_scopes_file_name %>'
require_relative '<%= screening_assessment_file_name %>'<% end %>
require_relative '../../provenance_validator'
require_relative '../../us_core_options'<% if us_core_7_and_above? %>
require_relative '<%= smart_app_launch_file_name %>'
require_relative '<%= stu2_2_smart_app_launch_file_name %>'<% end %>

<% group_file_list.each do |file_name| %>require_relative '<%= file_name %>'
<% end %>
module USCoreTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::TestSuite
      title '<%= title %>'
      description %(
        The US Core Test Kit tests systems for their conformance to the [US Core
        Implementation Guide](<%=ig_link %>).

        HL7® FHIR® resources are validated with the Java validator using
        `tx.fhir.org` as the terminology server. Users should note that the
        although the ONC Certification (g)(10) Standardized API Test Suite
        includes tests from this suite, [it uses a different method to perform
        terminology
        validation](https://github.com/onc-healthit/onc-certification-g10-test-kit/wiki/FAQ#q-why-do-some-resources-fail-in-us-core-test-kit-with-terminology-validation-errors).
        As a result, resource validation results may not be consistent between
        the US Core Test Suite and the ONC Certification (g)(10) Standardized
        API Test Suite.
      )

      GENERAL_MESSAGE_FILTERS = [
        %r{Sub-extension url 'introspect' is not defined by the Extension http://fhir-registry\.smarthealthit\.org/StructureDefinition/oauth-uris},
        %r{Sub-extension url 'revoke' is not defined by the Extension http://fhir-registry\.smarthealthit\.org/StructureDefinition/oauth-uris},
        /Observation\.effective\.ofType\(Period\): .*vs-1:/, # Invalid invariant in FHIR v4.0.1
        /Observation\.effective\.ofType\(Period\): .*us-core-1:/, # Invalid invariant in US Core v3.1.1
        /Provenance.agent\[\d*\]: Constraint failed: provenance-1/, #Invalid invariant in US Core v5.0.1
        %r{Unknown Code System 'http://hl7.org/fhir/us/core/CodeSystem/us-core-tags'}, # Validator has an issue with this US Core 5 code system in US Core 6 resource
        %r{URL value 'http://hl7.org/fhir/us/core/CodeSystem/us-core-tags' does not resolve}, # Validator has an issue with this US Core 5 code system in US Core 6 resource
        /\A\S+: \S+: URL value '.*' does not resolve/,
        %r{Observation.component\[\d+\].value.ofType\(Quantity\): The code provided \(http://unitsofmeasure.org#L/min\) was not found in the value set 'Vital Signs Units'}, # Known issue with the Pulse Oximetry Profile
        %r{Slice 'Observation\.value\[x\]:valueQuantity': a matching slice is required, but not found \(from (http://hl7\.org/fhir/StructureDefinition/bmi\|4\.0\.1|http://hl7\.org/fhir/StructureDefinition/bmi\%7C4\.0\.1)\)}
      ].freeze
<% if version_specific_message_filters.empty? %>
      VERSION_SPECIFIC_MESSAGE_FILTERS = [].freeze
<% else %>
      VERSION_SPECIFIC_MESSAGE_FILTERS = [
        <%= version_specific_message_filters.map { |filter| "%r{#{filter.source}}" }.join(",\n        ") %>
      ].freeze
<% end %>
      VALIDATION_MESSAGE_FILTERS = GENERAL_MESSAGE_FILTERS + VERSION_SPECIFIC_MESSAGE_FILTERS

      def self.metadata
        @metadata ||= YAML.load_file(File.join(__dir__, 'metadata.yml'), aliases: true)[:groups].map do |raw_metadata|
            Generator::GroupMetadata.new(raw_metadata)
          end
      end

      id :<%= suite_id %>
      <%- if module_name == 'USCoreV610'-%>

      verifies_requirements 'hl7.fhir.us.core_6.1.0@535'
      <%- elsif module_name == 'USCoreV700'-%>

      verifies_requirements 'hl7.fhir.us.core_7.0.0@535'
      <%- end -%>

      fhir_resource_validator do
        igs '<%= ig_identifier %>'
        message_filters = VALIDATION_MESSAGE_FILTERS

        exclude_message do |message|

          message_filters.any? { |filter| filter.match? message.message }
        end

        perform_additional_validation do |resource, profile_url|
          ProvenanceValidator.validate(resource) if resource.instance_of?(FHIR::Provenance)
        end
      end

      input :url,
        title: 'FHIR Endpoint',
        description: 'URL of the FHIR endpoint'

      suite_option :smart_app_launch_version,
        title: 'SMART App Launch Version',
        default: USCoreOptions::SMART_2,
        list_options: [
          {
            label: 'SMART App Launch 1.0.0',
            value: USCoreOptions::SMART_1
          },
          {
            label: 'SMART App Launch 2.0.0',
            value: USCoreOptions::SMART_2,
          },
          {
            label: 'SMART App Launch 2.2.0',
            value: USCoreOptions::SMART_2_2
          }
        ]

      group from: :<%= smart_app_launch_id %><% if us_core_7_and_above? %>,
            required_suite_options: USCoreOptions::SMART_1_REQUIREMENT
      group from: :<%= smart_app_launch_id %>,
            required_suite_options: USCoreOptions::SMART_2_REQUIREMENT,
            id: :<%= smart_app_launch_id %>_stu2
      group from: :<%= smart_app_launch_id %>_stu2_2,
            required_suite_options: USCoreOptions::SMART_2_2_REQUIREMENT<% end %>

      group do
        input :smart_auth_info,
          title: 'OAuth Credentials',
          type: :auth_info,
          optional: true

        fhir_client do
          url :url
          auth_info :smart_auth_info
        end

        title 'US Core FHIR API'
        id :<%= fhir_api_group_id %><% if us_core_6_and_above? %>

        config(
          options: {
            tag_requests: true
          }
        )<% end %>

        group from: :<%= capability_statement_group_id %>
      <% group_id_list.each do |id| %>
        group from: :<%= id %><% end %>
        <%- if module_name == 'USCoreV610'-%>
        group from: :<%= clinical_notes_guidance_group_id %>,
              verifies_requirements: ['hl7.fhir.us.core_6.1.0@206', 'hl7.fhir.us.core_6.1.0@207', 'hl7.fhir.us.core_6.1.0@208', 'hl7.fhir.us.core_6.1.0@209', 'hl7.fhir.us.core_6.1.0@210', 'hl7.fhir.us.core_6.1.0@214', 'hl7.fhir.us.core_6.1.0@215', 'hl7.fhir.us.core_6.1.0@216', 'hl7.fhir.us.core_6.1.0@220', 'hl7.fhir.us.core_6.1.0@221', 'hl7.fhir.us.core_6.1.0@223', 'hl7.fhir.us.core_6.1.0@224', 'hl7.fhir.us.core_6.1.0@231']
        <%- elsif module_name == 'USCoreV700'-%>
        group from: :<%= clinical_notes_guidance_group_id %>,
              verifies_requirements: ['hl7.fhir.us.core_7.0.0@206', 'hl7.fhir.us.core_7.0.0@207', 'hl7.fhir.us.core_7.0.0@208', 'hl7.fhir.us.core_7.0.0@209', 'hl7.fhir.us.core_7.0.0@210', 'hl7.fhir.us.core_7.0.0@214', 'hl7.fhir.us.core_7.0.0@215', 'hl7.fhir.us.core_7.0.0@216', 'hl7.fhir.us.core_7.0.0@220', 'hl7.fhir.us.core_7.0.0@221', 'hl7.fhir.us.core_7.0.0@223', 'hl7.fhir.us.core_7.0.0@224', 'hl7.fhir.us.core_7.0.0@231']
        <%- else -%>
        group from: :<%= clinical_notes_guidance_group_id %>
        <%- end -%>
        <%- if us_core_6_and_above? -%>
        group from: :<%= screening_assessment_id %>
        <%- end -%>
        <%- if module_name == 'USCoreV610'-%>
        group from: :us_core_311_data_absent_reason,
              verifies_requirements: ['hl7.fhir.us.core_6.1.0@41', 'hl7.fhir.us.core_6.1.0@45']
        <%- elsif module_name == 'USCoreV700'-%>
        group from: :us_core_311_data_absent_reason,
              verifies_requirements: ['hl7.fhir.us.core_7.0.0@41', 'hl7.fhir.us.core_7.0.0@45']
        <%- else -%>
        group from: :us_core_311_data_absent_reason
        <%- end -%>
      end<% if us_core_6_and_above? %>

      group from: :<%= granular_scopes_id %>,
            required_suite_options: USCoreOptions::SMART_2_REQUIREMENT
      group from: :<%= granular_scopes_id %>,
            id: :<%= granular_scopes_id %>_stu2_2,
            required_suite_options: USCoreOptions::SMART_2_2_REQUIREMENT
      <% end %>

      links [
        {
          type: 'report_issue',
          label: 'Report Issue',
          url: 'https://github.com/inferno-framework/us-core-test-kit/issues/'
        },
        {
          type: 'source_code',
          label: 'Open Source',
          url: 'https://github.com/inferno-framework/us-core-test-kit/'
        },
        {
          type: 'download',
          label: 'Download', 
          url: 'https://github.com/inferno-framework/us-core-test-kit/releases/'
        }
      ]
    end
  end
end
