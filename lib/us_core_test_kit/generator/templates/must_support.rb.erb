require_relative '../../../must_support_test'

module USCoreTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::Test
      include USCoreTestKit::MustSupportTest

      title 'All must support elements are provided in the <%= resource_type %> resources returned'
      description %(
        US Core Responders SHALL be capable of populating all data elements as
        part of the query results as specified by the US Core Server Capability
        Statement. This test will look through the <%= resource_type %> resources
        found previously for the following must support elements:

<%= must_support_list_string %><% if uscdi_list_string.present? %>

        For ONC USCDI requirements, each <%= resource_type %> must support the following additional elements:

<%= uscdi_list_string %><% end %>
      )
      <%-
        base_requirement_ids = ['1','13','75','87','88','90','91','111','115']
        base_requirement_map = {
              'AllergyIntoleranceMustSupportTest' => ['304'],
              'ConditionEncounterDiagnosisMustSupportTest' => ['325', '326'],
              'CareTeamMustSupportTest' => ['313'],
              'DiagnosticReportNoteMustSupportTest' => ['360'],
              'DocumentReferenceMustSupportTest' => ['368'],
              'EncounterMustSupportTest' => ['375', '379'],
              'GoalMustSupportTest' => ['387'],
              'MedicationRequestMustSupportTest' => ['405', '408'],
              'ObservationScreeningAssessmentMustSupportTest' => ['439'],
              'OrganizationMustSupportTest' => ['455']
        }
        v700_requirement_map = {
          'MedicationRequestMustSupportTest' => ['406', '411'],
          'ProcedureMustSupportTest' => ['482', '484'],
          'ServiceRequestMustSupportTest' => ['516', '518']
        }
        v800_base_requirement_ids = ['801', '802', '803', '804', '805', '812', '814', '870', '872']
        v800_requirement_map = {
              'SimpleObservationMustSupportTest' => ['822', '868'],
              'ObservationScreeningAssessmentMustSupportTest' => ['823', '845'],
              'ConditionProblemsHealthConcernsMustSupportTest' => ['824', '831', '832'],
        }
        v800_remove_requirements = ['325', '326']
        
        namespace = case module_name
        when 'USCoreV610' then 'hl7.fhir.us.core_6.1.0'
        when 'USCoreV700' then 'hl7.fhir.us.core_7.0.0'
        when 'USCoreV800' then 'hl7.fhir.us.core_8.0.0'
        end

        all_ids = base_requirement_ids
        if base_requirement_map[class_name]
          all_ids += base_requirement_map[class_name]
        end

        if module_name == 'USCoreV700' || module_name == 'USCoreV800'
          if  v700_requirement_map[class_name]
            all_ids += v700_requirement_map[class_name]
          end
        end

        if module_name == 'USCoreV800'
          all_ids += v800_base_requirement_ids
          if  v800_requirement_map[class_name]
            all_ids += v800_requirement_map[class_name]
          end
          all_ids = all_ids.reject { |id| v800_remove_requirements.include?(id) }
        end

        if namespace
          num_spaces = '      verifies_requirements '.length
      -%>
      verifies_requirements <%= 
        all_ids.map.with_index { |id, i| (i > 0 ? ' ' * num_spaces : '') + "'#{namespace}@#{id}'" + (i < all_ids.size - 1 ? ',' : '') }.join("\n") 
      %>
      <%- end -%>

      id :<%= test_id %>

      def resource_type
        '<%= resource_type %>'
      end

      def self.metadata
        @metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, 'metadata.yml'), aliases: true))
      end

      def scratch_resources
        scratch[:<%= profile_identifier %>_resources] ||= {}
      end

      run do
        perform_must_support_test(<%= resource_collection_string %>)
      end
    end
  end
end
