require_relative '../../../validation_test'

module USCoreTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::Test
      include USCoreTestKit::ValidationTest

      id :<%= test_id %>
      title '<%= resource_type %> resources returned during previous tests conform to the <%= profile_name %>'
      description %(
<%= description %>
      )
<%-
      verifies_requirements = VerifiesRequirements.new
      verifies_requirements.requirement_lists['USCoreV610'][:base] = ['18', '19', '20', '21', '23', '27', '40', '74']
      verifies_requirements.requirement_lists['USCoreV610'][:map] = {
            'AllergyIntoleranceValidationTest' => ['304', '585', '586'],
            'DiagnosticReportLabValidationTest' => ['356', '357'],
            'ImmunizationValidationTest' => ['391'],
            'AverageBloodPressureValidationTest' => ['421'],
            'ObservationClinicalResultValidationTest' => ['427']
        }
      verifies_requirements.requirement_lists['USCoreV700'][:map] = {
        'MedicationRequestValidationTest' => ['414'],
        'ProcedureValidationTest' => ['486'],
        'ServiceRequestValidationTest' => ['520']
        }
      verifies_requirements.requirement_lists['USCoreV800'][:map] = {
            'ProcedureValidationTest' => ['856']
        }
-%>
<%- if verifies_requirements.has_requirements?(module_name, class_name) -%>
<%= verifies_requirements.create_verifies_requirements(module_name, class_name) %>
<%- end -%>
      output :dar_code_found, :dar_extension_found

      def resource_type
        '<%= resource_type %>'
      end

      def scratch_resources
        scratch[:<%= profile_identifier %>_resources] ||= {}
      end

      run do
        perform_validation_test(scratch_resources[:all] || [],
                                '<%= profile_url %>',
                                '<%= profile_version %>',
                                skip_if_empty: <%= skip_if_empty %>)
      end
    end
  end
end
