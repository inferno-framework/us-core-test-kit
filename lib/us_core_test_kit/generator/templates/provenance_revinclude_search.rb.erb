require_relative '../../../search_test'
require_relative '../../../generator/group_metadata'

module USCoreTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::Test
      include USCoreTestKit::SearchTest

      title 'Server returns Provenance resources from <%= resource_type %> search by <%= search_param_name_string %>'
      description %(
        A server SHALL be capable of supporting _revIncludes:Provenance:target.

        This test will perform a search by <%= search_param_name_string %> and
        will pass if a Provenance resource is found in the response.
      %)

      id :<%= test_id %>
  <% if needs_patient_id? %>
      input :patient_ids,
        title: 'Patient IDs',
        description: 'Comma separated list of patient IDs that in sum contain all MUST SUPPORT elements'
  <% end %>
      def properties
        @properties ||= SearchTestProperties.new(
  <%= search_test_properties_string %>
        )
      end

      def self.metadata
        @metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, 'metadata.yml')))
      end

      def self.provenance_metadata
        @provenance_metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, '..', 'provenance', 'metadata.yml'), aliases: true))
      end

      def scratch_resources
        scratch[:<%= profile_identifier %>_resources] ||= {}
      end

      def scratch_provenance_resources
        scratch[:provenance_resources] ||= {}
      end

      run do
        run_provenance_revinclude_search_test
      end
    end
  end
end
