require_relative '../../../search_test'
require_relative '../../../generator/group_metadata'

module USCoreTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::Test
      include USCoreTestKit::SearchTest

      title 'Server returns valid results for <%= resource_type %> search by <%= search_param_name_string %>'
      description %(
<%= description %>
      )
<%-
      verifies_requirements = VerifiesRequirements.new
      test_medication_inclusion_requirement_ids = ['250']
      verifies_requirements.requirement_lists['USCoreV610'][:base] = ['51', '52', '55', '58']
      verifies_requirements.requirement_lists['USCoreV800'][:map] = {
            'MedicationRequestPatientIntentStatusSearchTest' => ['820']
        }

      all_ids = verifies_requirements.get_ids(module_name, class_name)
      if all_ids && test_medication_inclusion?
        all_ids += test_medication_inclusion_requirement_ids
      end
-%>
<%- if all_ids && all_ids.any? && !optional? -%>
<%= verifies_requirements.create_verifies_requirements_from_ids(module_name, all_ids) %>
<%- end -%>

      id :<%= test_id %><% if optional? %>
      optional
  <% end %><% if needs_patient_id? %>
      input :patient_ids,
        title: 'Patient IDs',
        description: 'Comma separated list of patient IDs that in sum contain all MUST SUPPORT elements'
  <% end %><% if resource_type == 'Device' %>
      input :implantable_device_codes,
        title: 'Implantable Device Type Code',
        description: 'Enter the code for an Implantable Device type, or multiple codes separated by commas. '\
                    'If blank, Inferno will validate all Device resources against the Implantable Device profile',
        optional: true
  <% end %>
      def self.properties
        @properties ||= SearchTestProperties.new(
  <%= search_test_properties_string %>
        )
      end

      def self.metadata
        @metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, 'metadata.yml'), aliases: true))
      end

      def scratch_resources
        scratch[:<%= profile_identifier %>_resources] ||= {}
      end

      run do
        run_search_test
      end
    end
  end
end
